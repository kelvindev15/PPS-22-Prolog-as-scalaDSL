pages = [{"l":"index.html#","e":false,"i":"","n":"Prolog-as-ScalaDSL","t":"Prolog-as-ScalaDSL","d":"","k":"static","x":""},
{"l":"io/github/kelvindev15.html#","e":false,"i":"","n":"io.github.kelvindev15","t":"io.github.kelvindev15","d":"","k":"package","x":""},
{"l":"io/github/kelvindev15.html#Query-0","e":false,"i":"","n":"Query","t":"Query","d":"io.github.kelvindev15","k":"type","x":""},
{"l":"io/github/kelvindev15.html#Substitution-0","e":false,"i":"","n":"Substitution","t":"Substitution","d":"io.github.kelvindev15","k":"type","x":""},
{"l":"io/github/kelvindev15/prolog.html#","e":false,"i":"","n":"io.github.kelvindev15.prolog","t":"io.github.kelvindev15.prolog","d":"","k":"package","x":""},
{"l":"io/github/kelvindev15/prolog/core.html#","e":false,"i":"","n":"io.github.kelvindev15.prolog.core","t":"io.github.kelvindev15.prolog.core","d":"","k":"package","x":""},
{"l":"io/github/kelvindev15/prolog/core/Theory.html#","e":false,"i":"","n":"io.github.kelvindev15.prolog.core.Theory","t":"io.github.kelvindev15.prolog.core.Theory","d":"","k":"package","x":""},
{"l":"io/github/kelvindev15/prolog/core/Theory/Theory.html#","e":false,"i":"","n":"Theory","t":"Theory extends Seq[Clause]","d":"io.github.kelvindev15.prolog.core.Theory","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Theory/Theory.html#add-f8e","e":false,"i":"","n":"add","t":"add(clause: Clause): Theory","d":"io.github.kelvindev15.prolog.core.Theory.Theory","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Theory/Theory.html#clauses-0","e":false,"i":"","n":"clauses","t":"clauses: Seq[Clause]","d":"io.github.kelvindev15.prolog.core.Theory.Theory","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Theory/Theory.html#contains-1b9","e":false,"i":"","n":"contains","t":"contains(clause: Clause): Boolean","d":"io.github.kelvindev15.prolog.core.Theory.Theory","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Theory/Theory.html#remove-f8e","e":false,"i":"","n":"remove","t":"remove(clause: Clause): Theory","d":"io.github.kelvindev15.prolog.core.Theory.Theory","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Theory/Theory$.html#","e":false,"i":"","n":"Theory","t":"Theory","d":"io.github.kelvindev15.prolog.core.Theory","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Theory/Theory$.html#apply-1ea","e":false,"i":"","n":"apply","t":"apply(clauses: Clause*): Theory","d":"io.github.kelvindev15.prolog.core.Theory.Theory","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Theory/Theory$$MutableTheory.html#","e":false,"i":"","n":"MutableTheory","t":"MutableTheory(var theory: Theory) extends Theory","d":"io.github.kelvindev15.prolog.core.Theory.Theory","k":"class","x":""},
{"l":"io/github/kelvindev15/prolog/core/Theory/Theory$$MutableTheory.html#theory-0","e":false,"i":"","n":"theory","t":"theory: Theory","d":"io.github.kelvindev15.prolog.core.Theory.Theory.MutableTheory","k":"var","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant.html#","e":false,"i":"","n":"Constant","t":"Constant extends Term","d":"io.github.kelvindev15.prolog.core","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant.html#value-0","e":false,"i":"","n":"value","t":"value: Any","d":"io.github.kelvindev15.prolog.core.Constant","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant$.html#","e":false,"i":"","n":"Constant","t":"Constant","d":"io.github.kelvindev15.prolog.core","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant$.html#apply-ffffffd0","e":false,"i":"","n":"apply","t":"apply(value: Any): Constant","d":"io.github.kelvindev15.prolog.core.Constant","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant$$Atom$.html#","e":false,"i":"","n":"Atom","t":"Atom","d":"io.github.kelvindev15.prolog.core.Constant","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant$$Atom$.html#apply-fffff19d","e":false,"i":"","n":"apply","t":"apply(value: String): Atom","d":"io.github.kelvindev15.prolog.core.Constant.Atom","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant$$Atom.html#","e":false,"i":"","n":"Atom","t":"Atom extends Constant, Struct","d":"io.github.kelvindev15.prolog.core.Constant","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant$$Atom.html#arguments-0","e":false,"i":"","n":"arguments","t":"arguments: Seq[Term]","d":"io.github.kelvindev15.prolog.core.Constant.Atom","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant$$Atom.html#arity-0","e":false,"i":"","n":"arity","t":"arity: Int","d":"io.github.kelvindev15.prolog.core.Constant.Atom","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant$$Atom.html#functor-0","e":false,"i":"","n":"functor","t":"functor: Atom","d":"io.github.kelvindev15.prolog.core.Constant.Atom","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant$$Atom.html#value-0","e":false,"i":"","n":"value","t":"value: String","d":"io.github.kelvindev15.prolog.core.Constant.Atom","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant$$Numeric$.html#","e":false,"i":"","n":"Numeric","t":"Numeric","d":"io.github.kelvindev15.prolog.core.Constant","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant$$Numeric$.html#apply-953","e":false,"i":"","n":"apply","t":"apply(value: AnyVal): Numeric","d":"io.github.kelvindev15.prolog.core.Constant.Numeric","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant$$Numeric.html#","e":false,"i":"","n":"Numeric","t":"Numeric extends Constant","d":"io.github.kelvindev15.prolog.core.Constant","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Constant$$Numeric.html#value-0","e":false,"i":"","n":"value","t":"value: AnyVal","d":"io.github.kelvindev15.prolog.core.Constant.Numeric","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Goals$.html#","e":false,"i":"","n":"Goals","t":"Goals","d":"io.github.kelvindev15.prolog.core","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Goals$$Conjunction$.html#","e":false,"i":"","n":"Conjunction","t":"Conjunction","d":"io.github.kelvindev15.prolog.core.Goals","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Goals$$Conjunction$.html#apply-fffffdf0","e":false,"i":"","n":"apply","t":"apply(args: Term*): Conjunction","d":"io.github.kelvindev15.prolog.core.Goals.Conjunction","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Goals$$Conjunction$.html#unapply-a02","e":false,"i":"","n":"unapply","t":"unapply(conjunction: Conjunction): Option[(Term, Term)]","d":"io.github.kelvindev15.prolog.core.Goals.Conjunction","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Goals$$Conjunction$.html#wrapIfNecessary-530","e":false,"i":"","n":"wrapIfNecessary","t":"wrapIfNecessary(args: Term*): Term","d":"io.github.kelvindev15.prolog.core.Goals.Conjunction","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Goals$$Conjunction.html#","e":false,"i":"","n":"Conjunction","t":"Conjunction extends BinaryRecursiveStruct","d":"io.github.kelvindev15.prolog.core.Goals","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Goals$$Conjunction.html#functor-0","e":false,"i":"","n":"functor","t":"functor: Atom","d":"io.github.kelvindev15.prolog.core.Goals.Conjunction","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Goals$$Disjunction$.html#","e":false,"i":"","n":"Disjunction","t":"Disjunction","d":"io.github.kelvindev15.prolog.core.Goals","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Goals$$Disjunction$.html#apply-fffffdf0","e":false,"i":"","n":"apply","t":"apply(args: Term*): Conjunction","d":"io.github.kelvindev15.prolog.core.Goals.Disjunction","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Goals$$Disjunction$.html#unapply-ffffff0e","e":false,"i":"","n":"unapply","t":"unapply(disjunction: Disjunction): Option[(Term, Term)]","d":"io.github.kelvindev15.prolog.core.Goals.Disjunction","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Goals$$Disjunction$.html#wrapIfNecessary-530","e":false,"i":"","n":"wrapIfNecessary","t":"wrapIfNecessary(args: Term*): Term","d":"io.github.kelvindev15.prolog.core.Goals.Disjunction","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Goals$$Disjunction.html#","e":false,"i":"","n":"Disjunction","t":"Disjunction extends BinaryRecursiveStruct","d":"io.github.kelvindev15.prolog.core.Goals","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Goals$$Disjunction.html#functor-0","e":false,"i":"","n":"functor","t":"functor: Atom","d":"io.github.kelvindev15.prolog.core.Goals.Disjunction","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Language$.html#","e":false,"i":"","n":"Language","t":"Language","d":"io.github.kelvindev15.prolog.core","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Language$$Builtins$.html#","e":false,"i":"","n":"Builtins","t":"Builtins","d":"io.github.kelvindev15.prolog.core.Language","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Prolog$.html#","e":false,"i":"","n":"Prolog","t":"Prolog","d":"io.github.kelvindev15.prolog.core","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Prolog$$Functors$.html#","e":false,"i":"","n":"Functors","t":"Functors","d":"io.github.kelvindev15.prolog.core.Prolog","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Prolog$$Functors$.html#CLAUSE-0","e":false,"i":"","n":"CLAUSE","t":"CLAUSE: Atom","d":"io.github.kelvindev15.prolog.core.Prolog.Functors","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Prolog$$Functors$.html#CONS-0","e":false,"i":"","n":"CONS","t":"CONS: Atom","d":"io.github.kelvindev15.prolog.core.Prolog.Functors","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Prolog$$Functors$.html#EMPTY_LIST-0","e":false,"i":"","n":"EMPTY_LIST","t":"EMPTY_LIST: Atom","d":"io.github.kelvindev15.prolog.core.Prolog.Functors","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Prolog$$Functors$.html#FAIL-0","e":false,"i":"","n":"FAIL","t":"FAIL: Atom","d":"io.github.kelvindev15.prolog.core.Prolog.Functors","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Prolog$$Functors$.html#GOAL_CONJUNCTION-0","e":false,"i":"","n":"GOAL_CONJUNCTION","t":"GOAL_CONJUNCTION: Atom","d":"io.github.kelvindev15.prolog.core.Prolog.Functors","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Prolog$$Functors$.html#GOAL_DISJUNCTION-0","e":false,"i":"","n":"GOAL_DISJUNCTION","t":"GOAL_DISJUNCTION: Atom","d":"io.github.kelvindev15.prolog.core.Prolog.Functors","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Prolog$$Functors$.html#TRUE-0","e":false,"i":"","n":"TRUE","t":"TRUE: Atom","d":"io.github.kelvindev15.prolog.core.Prolog.Functors","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Prolog$$Syntax$.html#","e":false,"i":"","n":"Syntax","t":"Syntax","d":"io.github.kelvindev15.prolog.core.Prolog","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Prolog$$Syntax$.html#AtomRegex-0","e":false,"i":"","n":"AtomRegex","t":"AtomRegex: Regex","d":"io.github.kelvindev15.prolog.core.Prolog.Syntax","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Prolog$$Syntax$.html#VariableRegex-0","e":false,"i":"","n":"VariableRegex","t":"VariableRegex: Regex","d":"io.github.kelvindev15.prolog.core.Prolog.Syntax","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList.html#","e":false,"i":"","n":"PrologList","t":"PrologList extends RecursiveStruct","d":"io.github.kelvindev15.prolog.core","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList.html#size-0","e":false,"i":"","n":"size","t":"size: Int","d":"io.github.kelvindev15.prolog.core.PrologList","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$.html#","e":false,"i":"","n":"PrologList","t":"PrologList","d":"io.github.kelvindev15.prolog.core","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$.html#apply-fffff479","e":false,"i":"","n":"apply","t":"apply(elements: Term*): PrologList","d":"io.github.kelvindev15.prolog.core.PrologList","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$$Cons$.html#","e":false,"i":"","n":"Cons","t":"Cons","d":"io.github.kelvindev15.prolog.core.PrologList","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$$Cons$.html#apply-fffffce1","e":false,"i":"","n":"apply","t":"apply(head: Term, tail: PrologList): PrologList","d":"io.github.kelvindev15.prolog.core.PrologList.Cons","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$$Cons.html#","e":false,"i":"","n":"Cons","t":"Cons extends PrologList","d":"io.github.kelvindev15.prolog.core.PrologList","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$$Cons.html#arguments-0","e":false,"i":"","n":"arguments","t":"arguments: Seq[Term]","d":"io.github.kelvindev15.prolog.core.PrologList.Cons","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$$Cons.html#arity-0","e":false,"i":"","n":"arity","t":"arity: Int","d":"io.github.kelvindev15.prolog.core.PrologList.Cons","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$$Cons.html#functor-0","e":false,"i":"","n":"functor","t":"functor: Atom","d":"io.github.kelvindev15.prolog.core.PrologList.Cons","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$$Cons.html#head-0","e":false,"i":"","n":"head","t":"head: Term","d":"io.github.kelvindev15.prolog.core.PrologList.Cons","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$$Cons.html#size-0","e":false,"i":"","n":"size","t":"size: Int","d":"io.github.kelvindev15.prolog.core.PrologList.Cons","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$$Cons.html#tail-0","e":false,"i":"","n":"tail","t":"tail: PrologList","d":"io.github.kelvindev15.prolog.core.PrologList.Cons","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$$Nil$.html#","e":false,"i":"","n":"Nil","t":"Nil extends PrologList","d":"io.github.kelvindev15.prolog.core.PrologList","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$$Nil$.html#arguments-0","e":false,"i":"","n":"arguments","t":"arguments: Seq[Term]","d":"io.github.kelvindev15.prolog.core.PrologList.Nil","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$$Nil$.html#arity-0","e":false,"i":"","n":"arity","t":"arity: Int","d":"io.github.kelvindev15.prolog.core.PrologList.Nil","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$$Nil$.html#functor-0","e":false,"i":"","n":"functor","t":"functor: Atom","d":"io.github.kelvindev15.prolog.core.PrologList.Nil","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/PrologList$$Nil$.html#size-0","e":false,"i":"","n":"size","t":"size: Int","d":"io.github.kelvindev15.prolog.core.PrologList.Nil","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct.html#","e":false,"i":"","n":"RecursiveStruct","t":"RecursiveStruct extends Struct","d":"io.github.kelvindev15.prolog.core","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct.html#linearizedArguments-0","e":false,"i":"","n":"linearizedArguments","t":"linearizedArguments: Iterable[Term]","d":"io.github.kelvindev15.prolog.core.RecursiveStruct","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct$.html#","e":false,"i":"","n":"RecursiveStruct","t":"RecursiveStruct","d":"io.github.kelvindev15.prolog.core","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct$$BinaryRecursiveStruct$.html#","e":false,"i":"","n":"BinaryRecursiveStruct","t":"BinaryRecursiveStruct","d":"io.github.kelvindev15.prolog.core.RecursiveStruct","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct$$BinaryRecursiveStruct$.html#fold-eba","e":false,"i":"","n":"fold","t":"fold[T <: BinaryRecursiveStruct](struct: (Term, Term) => T)(args: Term*): T","d":"io.github.kelvindev15.prolog.core.RecursiveStruct.BinaryRecursiveStruct","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct$$BinaryRecursiveStruct$.html#wrapIfNecessary-141","e":false,"i":"","n":"wrapIfNecessary","t":"wrapIfNecessary(struct: Seq[Term] => BinaryRecursiveStruct)(args: Term*): Term","d":"io.github.kelvindev15.prolog.core.RecursiveStruct.BinaryRecursiveStruct","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct$$BinaryRecursiveStruct$$Tuple$.html#","e":false,"i":"","n":"Tuple","t":"Tuple","d":"io.github.kelvindev15.prolog.core.RecursiveStruct.BinaryRecursiveStruct","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct$$BinaryRecursiveStruct$$Tuple$.html#unapply-fffffd4b","e":false,"i":"","n":"unapply","t":"unapply(tuple: BinaryRecursiveStruct): Option[(Term, Term)]","d":"io.github.kelvindev15.prolog.core.RecursiveStruct.BinaryRecursiveStruct.Tuple","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct$$BinaryRecursiveStruct.html#","e":false,"i":"","n":"BinaryRecursiveStruct","t":"BinaryRecursiveStruct extends RecursiveStruct","d":"io.github.kelvindev15.prolog.core.RecursiveStruct","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct$$BinaryRecursiveStruct.html#arguments-0","e":false,"i":"","n":"arguments","t":"arguments: Seq[Term]","d":"io.github.kelvindev15.prolog.core.RecursiveStruct.BinaryRecursiveStruct","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct$$BinaryRecursiveStruct.html#arity-0","e":false,"i":"","n":"arity","t":"arity: Int","d":"io.github.kelvindev15.prolog.core.RecursiveStruct.BinaryRecursiveStruct","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct$$BinaryRecursiveStruct.html#first-0","e":false,"i":"","n":"first","t":"first: Term","d":"io.github.kelvindev15.prolog.core.RecursiveStruct.BinaryRecursiveStruct","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct$$BinaryRecursiveStruct.html#left-0","e":false,"i":"","n":"left","t":"left: Term","d":"io.github.kelvindev15.prolog.core.RecursiveStruct.BinaryRecursiveStruct","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct$$BinaryRecursiveStruct.html#right-0","e":false,"i":"","n":"right","t":"right: Term","d":"io.github.kelvindev15.prolog.core.RecursiveStruct.BinaryRecursiveStruct","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/RecursiveStruct$$BinaryRecursiveStruct.html#second-0","e":false,"i":"","n":"second","t":"second: Term","d":"io.github.kelvindev15.prolog.core.RecursiveStruct.BinaryRecursiveStruct","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct.html#","e":false,"i":"","n":"Struct","t":"Struct extends Term","d":"io.github.kelvindev15.prolog.core","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct.html#arguments-0","e":false,"i":"","n":"arguments","t":"arguments: Seq[Term]","d":"io.github.kelvindev15.prolog.core.Struct","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct.html#arity-0","e":false,"i":"","n":"arity","t":"arity: Int","d":"io.github.kelvindev15.prolog.core.Struct","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct.html#functor-0","e":false,"i":"","n":"functor","t":"functor: Atom","d":"io.github.kelvindev15.prolog.core.Struct","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$.html#","e":false,"i":"","n":"Struct","t":"Struct","d":"io.github.kelvindev15.prolog.core","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$.html#apply-ad1","e":false,"i":"","n":"apply","t":"apply(functor: Atom, args: Term*): Struct","d":"io.github.kelvindev15.prolog.core.Struct","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$.html#quoteIfFunctorIsMalformed-fffff2ca","e":false,"i":"","n":"quoteIfFunctorIsMalformed","t":"quoteIfFunctorIsMalformed(functor: String): String","d":"io.github.kelvindev15.prolog.core.Struct","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Args$.html#","e":false,"i":"","n":"Args","t":"Args","d":"io.github.kelvindev15.prolog.core.Struct","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Args$.html#unapply-fffff9ab","e":false,"i":"","n":"unapply","t":"unapply(struct: Struct): Option[Iterable[Term]]","d":"io.github.kelvindev15.prolog.core.Struct.Args","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Clause.html#","e":false,"i":"","n":"Clause","t":"Clause extends Struct","d":"io.github.kelvindev15.prolog.core.Struct","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Clause.html#body-0","e":false,"i":"","n":"body","t":"body: Term","d":"io.github.kelvindev15.prolog.core.Struct.Clause","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Clause.html#head-0","e":false,"i":"","n":"head","t":"head: Option[Struct]","d":"io.github.kelvindev15.prolog.core.Struct.Clause","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Directive$.html#","e":false,"i":"","n":"Directive","t":"Directive","d":"io.github.kelvindev15.prolog.core.Struct","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Directive$.html#apply-fffff9ac","e":false,"i":"","n":"apply","t":"apply(terms: Term*): Directive","d":"io.github.kelvindev15.prolog.core.Struct.Directive","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Directive.html#","e":false,"i":"","n":"Directive","t":"Directive extends Clause","d":"io.github.kelvindev15.prolog.core.Struct","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Directive.html#head-0","e":false,"i":"","n":"head","t":"head: Option[Struct]","d":"io.github.kelvindev15.prolog.core.Struct.Directive","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Fact$.html#","e":false,"i":"","n":"Fact","t":"Fact","d":"io.github.kelvindev15.prolog.core.Struct","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Fact$.html#apply-ff2","e":false,"i":"","n":"apply","t":"apply(head: Struct): Fact","d":"io.github.kelvindev15.prolog.core.Struct.Fact","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Fact.html#","e":false,"i":"","n":"Fact","t":"Fact extends Rule","d":"io.github.kelvindev15.prolog.core.Struct","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Fact.html#body-0","e":false,"i":"","n":"body","t":"body: Term","d":"io.github.kelvindev15.prolog.core.Struct.Fact","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Functor$.html#","e":false,"i":"","n":"Functor","t":"Functor","d":"io.github.kelvindev15.prolog.core.Struct","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Functor$.html#unapply-fffff9ab","e":false,"i":"","n":"unapply","t":"unapply(struct: Struct): Option[Atom]","d":"io.github.kelvindev15.prolog.core.Struct.Functor","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Indicator$.html#","e":false,"i":"","n":"Indicator","t":"Indicator","d":"io.github.kelvindev15.prolog.core.Struct","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Indicator$.html#apply-fffff628","e":false,"i":"","n":"apply","t":"apply(functor: Atom, arity: Int): Indicator","d":"io.github.kelvindev15.prolog.core.Struct.Indicator","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Indicator.html#","e":false,"i":"","n":"Indicator","t":"Indicator extends Struct","d":"io.github.kelvindev15.prolog.core.Struct","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Indicator.html#arguments-0","e":false,"i":"","n":"arguments","t":"arguments: Seq[Term]","d":"io.github.kelvindev15.prolog.core.Struct.Indicator","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Indicator.html#arity-0","e":false,"i":"","n":"arity","t":"arity: Int","d":"io.github.kelvindev15.prolog.core.Struct.Indicator","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Indicator.html#functor-0","e":false,"i":"","n":"functor","t":"functor: Atom","d":"io.github.kelvindev15.prolog.core.Struct.Indicator","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Rule$.html#","e":false,"i":"","n":"Rule","t":"Rule","d":"io.github.kelvindev15.prolog.core.Struct","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Rule$.html#apply-fffff2ed","e":false,"i":"","n":"apply","t":"apply(head: Struct, args: Term*): Rule","d":"io.github.kelvindev15.prolog.core.Struct.Rule","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Rule.html#","e":false,"i":"","n":"Rule","t":"Rule extends Clause","d":"io.github.kelvindev15.prolog.core.Struct","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Rule.html#arity-0","e":false,"i":"","n":"arity","t":"arity: Int","d":"io.github.kelvindev15.prolog.core.Struct.Rule","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Rule.html#body-0","e":false,"i":"","n":"body","t":"body: Term","d":"io.github.kelvindev15.prolog.core.Struct.Rule","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Rule.html#functor-0","e":false,"i":"","n":"functor","t":"functor: Atom","d":"io.github.kelvindev15.prolog.core.Struct.Rule","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Struct$$Rule.html#head-0","e":false,"i":"","n":"head","t":"head: Option[Struct]","d":"io.github.kelvindev15.prolog.core.Struct.Rule","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Term.html#","e":false,"i":"","n":"Term","t":"Term extends Visitable","d":"io.github.kelvindev15.prolog.core","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Term.html#isGround-0","e":false,"i":"","n":"isGround","t":"isGround: Boolean","d":"io.github.kelvindev15.prolog.core.Term","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Term.html#variables-0","e":false,"i":"","n":"variables","t":"variables: Seq[Variable]","d":"io.github.kelvindev15.prolog.core.Term","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Variable.html#","e":false,"i":"","n":"Variable","t":"Variable extends Term","d":"io.github.kelvindev15.prolog.core","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Variable.html#isAnonymous-0","e":false,"i":"","n":"isAnonymous","t":"isAnonymous: Boolean","d":"io.github.kelvindev15.prolog.core.Variable","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Variable.html#name-0","e":false,"i":"","n":"name","t":"name: String","d":"io.github.kelvindev15.prolog.core.Variable","k":"val","x":""},
{"l":"io/github/kelvindev15/prolog/core/Variable$.html#","e":false,"i":"","n":"Variable","t":"Variable","d":"io.github.kelvindev15.prolog.core","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/core/Variable$.html#anonymous-cd5","e":false,"i":"","n":"anonymous","t":"anonymous(): Variable","d":"io.github.kelvindev15.prolog.core.Variable","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Variable$.html#apply-fffff4fa","e":false,"i":"","n":"apply","t":"apply(name: String): Variable","d":"io.github.kelvindev15.prolog.core.Variable","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/core/Visitable.html#","e":false,"i":"","n":"Visitable","t":"Visitable","d":"io.github.kelvindev15.prolog.core","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/core/Visitable.html#accept-c53","e":false,"i":"","n":"accept","t":"accept[T](visitor: TermVisitor[T]): T","d":"io.github.kelvindev15.prolog.core.Visitable","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl.html#","e":false,"i":"","n":"io.github.kelvindev15.prolog.dsl","t":"io.github.kelvindev15.prolog.dsl","d":"","k":"package","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLFacilities$.html#","e":false,"i":"","n":"DSLFacilities","t":"DSLFacilities","d":"io.github.kelvindev15.prolog.dsl","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLFacilities$.html#:--87","e":false,"i":"extension (struct: Struct)","n":":-","t":":-(body: Term): Rule","d":"io.github.kelvindev15.prolog.dsl.DSLFacilities","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLFacilities$.html#:--fffff9ac","e":false,"i":"","n":":-","t":":-(terms: Term*): Directive","d":"io.github.kelvindev15.prolog.dsl.DSLFacilities","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLFacilities$.html#and-2a1","e":false,"i":"extension (struct: Struct)","n":"and","t":"and(other: Term): Struct","d":"io.github.kelvindev15.prolog.dsl.DSLFacilities","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLFacilities$.html#apply-ad1","e":false,"i":"extension (atom: Atom)","n":"apply","t":"apply(terms: Term*): Struct","d":"io.github.kelvindev15.prolog.dsl.DSLFacilities","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLFacilities$.html#given_Conversion_AnyVal_Numeric-0","e":false,"i":"","n":"given_Conversion_AnyVal_Numeric","t":"given_Conversion_AnyVal_Numeric: Conversion[AnyVal, Numeric]","d":"io.github.kelvindev15.prolog.dsl.DSLFacilities","k":"given","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLFacilities$.html#given_Conversion_String_Atom-0","e":false,"i":"","n":"given_Conversion_String_Atom","t":"given_Conversion_String_Atom: Conversion[String, Atom]","d":"io.github.kelvindev15.prolog.dsl.DSLFacilities","k":"given","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLFacilities$.html#given_Conversion_Struct_Fact-0","e":false,"i":"","n":"given_Conversion_Struct_Fact","t":"given_Conversion_Struct_Fact: given_Conversion_Struct_Fact.type","d":"io.github.kelvindev15.prolog.dsl.DSLFacilities","k":"given","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLFacilities$$given_Conversion_Struct_Fact$.html#","e":false,"i":"","n":"given_Conversion_Struct_Fact","t":"given_Conversion_Struct_Fact extends Conversion[Struct, Fact]","d":"io.github.kelvindev15.prolog.dsl.DSLFacilities","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLVariables$.html#","e":false,"i":"","n":"DSLVariables","t":"DSLVariables","d":"io.github.kelvindev15.prolog.dsl","k":"object","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLVariables$.html#A-0","e":false,"i":"","n":"A","t":"A: Variable","d":"io.github.kelvindev15.prolog.dsl.DSLVariables","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLVariables$.html#B-0","e":false,"i":"","n":"B","t":"B: Variable","d":"io.github.kelvindev15.prolog.dsl.DSLVariables","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLVariables$.html#C-0","e":false,"i":"","n":"C","t":"C: Variable","d":"io.github.kelvindev15.prolog.dsl.DSLVariables","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLVariables$.html#H-0","e":false,"i":"","n":"H","t":"H: Variable","d":"io.github.kelvindev15.prolog.dsl.DSLVariables","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLVariables$.html#S-0","e":false,"i":"","n":"S","t":"S: Variable","d":"io.github.kelvindev15.prolog.dsl.DSLVariables","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLVariables$.html#T-0","e":false,"i":"","n":"T","t":"T: Variable","d":"io.github.kelvindev15.prolog.dsl.DSLVariables","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLVariables$.html#X-0","e":false,"i":"","n":"X","t":"X: Variable","d":"io.github.kelvindev15.prolog.dsl.DSLVariables","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLVariables$.html#Y-0","e":false,"i":"","n":"Y","t":"Y: Variable","d":"io.github.kelvindev15.prolog.dsl.DSLVariables","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/DSLVariables$.html#Z-0","e":false,"i":"","n":"Z","t":"Z: Variable","d":"io.github.kelvindev15.prolog.dsl.DSLVariables","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/PrologDSL.html#","e":false,"i":"","n":"PrologDSL","t":"PrologDSL","d":"io.github.kelvindev15.prolog.dsl","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/PrologDSL.html#directive-fffffeee","e":false,"i":"","n":"directive","t":"directive(using theory: Theory)(directive: Directive): Unit","d":"io.github.kelvindev15.prolog.dsl.PrologDSL","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/PrologDSL.html#fact-4c5","e":false,"i":"","n":"fact","t":"fact(using theory: Theory)(fact: Fact): Unit","d":"io.github.kelvindev15.prolog.dsl.PrologDSL","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/PrologDSL.html#rule-fffff155","e":false,"i":"","n":"rule","t":"rule(using theory: Theory)(rule: Rule): Unit","d":"io.github.kelvindev15.prolog.dsl.PrologDSL","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/dsl/PrologDSL.html#theory-fffff6c4","e":false,"i":"","n":"theory","t":"theory(program: Theory ?=> Unit): Theory","d":"io.github.kelvindev15.prolog.dsl.PrologDSL","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/utils.html#","e":false,"i":"","n":"io.github.kelvindev15.prolog.utils","t":"io.github.kelvindev15.prolog.utils","d":"","k":"package","x":""},
{"l":"io/github/kelvindev15/prolog/utils/BinaryToFlatVisitor.html#","e":false,"i":"","n":"BinaryToFlatVisitor","t":"BinaryToFlatVisitor extends TermVisitor[Iterable[Term]]","d":"io.github.kelvindev15.prolog.utils","k":"class","x":""},
{"l":"io/github/kelvindev15/prolog/utils/TermVisitor.html#","e":false,"i":"","n":"TermVisitor","t":"TermVisitor[T]","d":"io.github.kelvindev15.prolog.utils","k":"trait","x":""},
{"l":"io/github/kelvindev15/prolog/utils/TermVisitor.html#visit-fffffd90","e":false,"i":"","n":"visit","t":"visit(constant: Constant): T","d":"io.github.kelvindev15.prolog.utils.TermVisitor","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/utils/TermVisitor.html#visit-2cb","e":false,"i":"","n":"visit","t":"visit(atom: Atom): T","d":"io.github.kelvindev15.prolog.utils.TermVisitor","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/utils/TermVisitor.html#visit-b59","e":false,"i":"","n":"visit","t":"visit(numeric: Numeric): T","d":"io.github.kelvindev15.prolog.utils.TermVisitor","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/utils/TermVisitor.html#visit-c68","e":false,"i":"","n":"visit","t":"visit(variable: Variable): T","d":"io.github.kelvindev15.prolog.utils.TermVisitor","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/utils/TermVisitor.html#visit-fffff601","e":false,"i":"","n":"visit","t":"visit(struct: Struct): T","d":"io.github.kelvindev15.prolog.utils.TermVisitor","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/utils/TermVisitor.html#visit-a27","e":false,"i":"","n":"visit","t":"visit(rule: Rule): T","d":"io.github.kelvindev15.prolog.utils.TermVisitor","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/utils/TermVisitor.html#visit-fffff997","e":false,"i":"","n":"visit","t":"visit(fact: Fact): T","d":"io.github.kelvindev15.prolog.utils.TermVisitor","k":"def","x":""},
{"l":"io/github/kelvindev15/prolog/utils/TermVisitor.html#visit-9a1","e":false,"i":"","n":"visit","t":"visit(binaryRecursiveStruct: BinaryRecursiveStruct): T","d":"io.github.kelvindev15.prolog.utils.TermVisitor","k":"def","x":""},
{"l":"io/github/kelvindev15/PrologProgram.html#","e":false,"i":"","n":"PrologProgram","t":"PrologProgram","d":"io.github.kelvindev15","k":"class","x":""},
{"l":"io/github/kelvindev15/PrologProgram.html#solve-fffffe6d","e":false,"i":"","n":"solve","t":"solve(query: Query): Solution","d":"io.github.kelvindev15.PrologProgram","k":"def","x":""},
{"l":"io/github/kelvindev15/Solution.html#","e":false,"i":"","n":"Solution","t":"Solution","d":"io.github.kelvindev15","k":"enum","x":""},
{"l":"io/github/kelvindev15/Solution$$Yes.html#","e":false,"i":"","n":"Yes","t":"Yes(substitution: Substitution)","d":"io.github.kelvindev15.Solution","k":"case","x":""},
{"l":"io/github/kelvindev15/Solution.html#No-0","e":false,"i":"","n":"No","t":"No extends Solution","d":"io.github.kelvindev15.Solution","k":"case","x":""},
{"l":"io/github/kelvindev15/Solution$$Yes.html#","e":false,"i":"","n":"Yes","t":"Yes(substitution: Substitution)","d":"io.github.kelvindev15.Solution","k":"case","x":""}];