"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[811],{3905:(e,i,t)=>{t.d(i,{Zo:()=>p,kt:()=>g});var n=t(7294);function r(e,i,t){return i in e?Object.defineProperty(e,i,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[i]=t,e}function a(e,i){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);i&&(n=n.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var i=1;i<arguments.length;i++){var t=null!=arguments[i]?arguments[i]:{};i%2?a(Object(t),!0).forEach((function(i){r(e,i,t[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(t,i))}))}return e}function l(e,i){if(null==e)return{};var t,n,r=function(e,i){if(null==e)return{};var t,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],i.indexOf(t)>=0||(r[t]=e[t]);return r}(e,i);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],i.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),u=function(e){var i=n.useContext(s),t=i;return e&&(t="function"==typeof e?e(i):o(o({},i),e)),t},p=function(e){var i=u(e.components);return n.createElement(s.Provider,{value:i},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var i=e.children;return n.createElement(n.Fragment,{},i)}},d=n.forwardRef((function(e,i){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(t),d=r,g=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return t?n.createElement(g,o(o({ref:i},p),{},{components:t})):n.createElement(g,o({ref:i},p))}));function g(e,i){var t=arguments,r=i&&i.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=d;var l={};for(var s in i)hasOwnProperty.call(i,s)&&(l[s]=i[s]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<a;u++)o[u]=t[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3249:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=t(7462),r=(t(7294),t(3905));const a={sidebar_position:1,sidebar_label:"Requisiti"},o="Requisiti",l={unversionedId:"documentazione/requirements",id:"documentazione/requirements",title:"Requisiti",description:"Requisiti di business",source:"@site/docs/documentazione/requirements.md",sourceDirName:"documentazione",slug:"/documentazione/requirements",permalink:"/PPS-22-Prolog-as-scalaDSL/docs/documentazione/requirements",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Requisiti"},sidebar:"docSidebar",previous:{title:"Analisi",permalink:"/PPS-22-Prolog-as-scalaDSL/docs/documentazione/analysis"},next:{title:"Design architetturale",permalink:"/PPS-22-Prolog-as-scalaDSL/docs/documentazione/architectural_design"}},s={},u=[{value:"Requisiti di business",id:"requisiti-di-business",level:2},{value:"Requisiti funzionali",id:"requisiti-funzionali",level:2},{value:"Requisiti utente",id:"requisiti-utente",level:3},{value:"Requisiti di sistema",id:"requisiti-di-sistema",level:3},{value:"Requisiti non funzionali",id:"requisiti-non-funzionali",level:2},{value:"Requisiti d&#39;implementazione",id:"requisiti-dimplementazione",level:2}],p={toc:u},m="wrapper";function c(e){let{components:i,...t}=e;return(0,r.kt)(m,(0,n.Z)({},p,t,{components:i,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"requisiti"},"Requisiti"),(0,r.kt)("h2",{id:"requisiti-di-business"},"Requisiti di business"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Obiettivo di questo progetto \xe8 di fornire una libreria che esponga un\nDomain Specific Language (DSL) in Scala. Il DSL permetter\xe0 integrare la programmazione\nlogica direttamente in Scala, sfruttando tutti i vantaggi del caso (Quali?).")),(0,r.kt)("h2",{id:"requisiti-funzionali"},"Requisiti funzionali"),(0,r.kt)("h3",{id:"requisiti-utente"},"Requisiti utente"),(0,r.kt)("p",null,"Nella descrizione dei requisiti utente si intende con ",(0,r.kt)("strong",{parentName:"p"},"utente")," colui che ",(0,r.kt)("em",{parentName:"p"},"utilizzer\xe0 la libreria"),"."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"L'utente deve poter costruire termini prolog. I termini sono:",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Constanti: atomi e numeri."),(0,r.kt)("li",{parentName:"ol"},"Variabili: anonime e non."),(0,r.kt)("li",{parentName:"ol"},"Termini composti: predicati, congiunzioni, disgiunzioni e liste."),(0,r.kt)("li",{parentName:"ol"},"Clausole: fatti, regole e direttive."))),(0,r.kt)("li",{parentName:"ol"},"I termini devono essere ispezionabili dall'utente:",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"L'utente deve poter ispezionare il valore delle costanti."),(0,r.kt)("li",{parentName:"ol"},"L'utente deve poter ispezionare il nome delle variabili."),(0,r.kt)("li",{parentName:"ol"},"L'utente deve poter ispezionare il funtore, l'arit\xe0 e gli argomenti dei termini composti."),(0,r.kt)("li",{parentName:"ol"},"L'utente deve poter ispezionare la testa e il corpo delle clausole."),(0,r.kt)("li",{parentName:"ol"},"L'utente deve poter ispezionare se un termine e base oppure no."))),(0,r.kt)("li",{parentName:"ol"},"Dato un insieme di clausole, l'utente deve poter costruire teorie prolog."),(0,r.kt)("li",{parentName:"ol"},"Data una teoria statica e/o teoria dinamica, e un termine che rappresenta il goal del programma, l'utente deve\npoter costruire un programma prolog."),(0,r.kt)("li",{parentName:"ol"},"Deve essere possibile per l'utente modificare le parti di un programma prolog: teoria statica e/o dinamica o il goal\ndel programma."),(0,r.kt)("li",{parentName:"ol"},"Dato un programma prolog l'utente deve poter invocare un risolutore per la computazione delle soluzioni del programma."),(0,r.kt)("li",{parentName:"ol"},"L'utente deve avere la possibilit\xe0 di scegliere se le soluzioni debbano essere computate tutte insieme oppure una per\nvolta."),(0,r.kt)("li",{parentName:"ol"},"L'utente deve avere la possibilit\xe0 di invocare un risolutore anche per ottenere le soluzioni di un programma prolog privo\ndi una teoria composto quindi esclusivamente di un termine rappresentante un goal."),(0,r.kt)("li",{parentName:"ol"},"L'utente per risolvere i programmi prolog deve poter scegliere tra i risolutori forniti dalla libreria oppure, tramite\nopportuna configurazione, tra risolutori compatibili implementati da terzi.")),(0,r.kt)("h3",{id:"requisiti-di-sistema"},"Requisiti di sistema"),(0,r.kt)("p",null,"Nella descrizione dei requisiti di sistema si intende con ",(0,r.kt)("strong",{parentName:"p"},"sistema")," la ",(0,r.kt)("em",{parentName:"p"},"libreria"),"."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Il sistema deve permette la costruzione dei termini prolog."),(0,r.kt)("li",{parentName:"ol"},"Il sistema deve fornire un Domain Specific Language (DSL) tramite il quale sar\xe0 possibile costruire nella maniera pi\xf9\nfedele e idiomatica possibile i costrutti del linguaggio prolog."),(0,r.kt)("li",{parentName:"ol"},"Il sistema deve essere costruito in modo tale che l'utente che intende sfruttare il DSL abbia il controllo del contesto\nin cui utilizzarlo. Vale a dire che tutte le funzionalit\xe0 che hanno a che fare specificatamente con il linguaggio prolog\ndovranno essere, all'occorrenza, abilitate dall'utente."),(0,r.kt)("li",{parentName:"ol"},"Il sistema deve fornire un risolutore di programmi prolog predefinito.")),(0,r.kt)("h2",{id:"requisiti-non-funzionali"},"Requisiti non funzionali"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Qualit\xe0"),": lo stile e la formattazione del codice sorgente verranno verificati tramite il plugin ",(0,r.kt)("em",{parentName:"li"},"scalaFmt"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Processo"),": ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"le pipeline di continuous integration (CI) e continuous delivery (CD) verranno eseguite su Github per mezzo delle ",(0,r.kt)("em",{parentName:"li"},"Github Actions"),";"),(0,r.kt)("li",{parentName:"ul"},"il sistema verr\xe0 rilasciato su maven central;"),(0,r.kt)("li",{parentName:"ul"},"il versionamento segue i principi del ",(0,r.kt)("em",{parentName:"li"},"semantic versioning"),".")))),(0,r.kt)("h2",{id:"requisiti-dimplementazione"},"Requisiti d'implementazione"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Scala 3.x"),(0,r.kt)("li",{parentName:"ul"},"JDK 17+"),(0,r.kt)("li",{parentName:"ul"},"2p-Kt 0.31+"),(0,r.kt)("li",{parentName:"ul"},"Lo sviluppo, in particolar modo per quanto riguarda l'implementazione di funzionalit\xe0 core non banali, dovr\xe0 seguire\ni principi del Test Driven Development (",(0,r.kt)("em",{parentName:"li"},"TDD"),").")))}c.isMDXComponent=!0}}]);