"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[634],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var i=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,i,o=function(e,t){if(null==e)return{};var r,i,o={},n=Object.keys(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=i.createContext({}),c=function(e){var t=i.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=o,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||n;return r?i.createElement(g,a(a({ref:t},u),{},{components:r})):i.createElement(g,a({ref:t},u))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,a=new Array(n);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<n;c++)a[c]=r[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7115:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var i=r(7462),o=(r(7294),r(3905));const n={sidebar_position:2,sidebar_label:"Design architetturale"},a="Design Architetturale",l={unversionedId:"documentazione/architectural_design",id:"documentazione/architectural_design",title:"Design Architetturale",description:"Lo scopo della libreria \xe8 quello di risolvere programmi prolog composti da teorie e goal da soddisfare.",source:"@site/docs/documentazione/architectural_design.md",sourceDirName:"documentazione",slug:"/documentazione/architectural_design",permalink:"/PPS-22-Prolog-as-scalaDSL/docs/documentazione/architectural_design",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Design architetturale"},sidebar:"docSidebar",previous:{title:"Requisiti",permalink:"/PPS-22-Prolog-as-scalaDSL/docs/documentazione/requirements"},next:{title:"Design dettagliato",permalink:"/PPS-22-Prolog-as-scalaDSL/docs/documentazione/detailed_design"}},s={},c=[],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"design-architetturale"},"Design Architetturale"),(0,o.kt)("p",null,"Lo scopo della libreria \xe8 quello di risolvere programmi prolog composti da teorie e goal da soddisfare.\n\xc8 dunque necessario l'utilizzo di un motore di risoluzione dei programmi prolog in grado di produrre delle\nsoluzioni a partire da questi programmi."),(0,o.kt)("p",null,"Per questo progetto si \xe8 scelto di utilizzare il motore ",(0,o.kt)("a",{parentName:"p",href:"https://pika-lab.gitlab.io/tuprolog/2p-in-kotlin/"},"2p-Kt"),",\nun versione del motore ",(0,o.kt)("a",{parentName:"p",href:"https://www.cs.nmsu.edu/ALP/2013/10/tuprolog-making-prolog-ubiquitous/"},"tuprolog")," scritta in Kotlin.\nTuttavia la libreria vuole rimanere aperta a eventuali altre implementazioni di motori di risoluzione. Per questo motivo\nil motore 2p-Kt \xe8 stato adattato per aderire all'interfaccia ",(0,o.kt)("inlineCode",{parentName:"p"},"Solver"),". Concettualmente rappresenta un entit\xe0 che prende\nin ingresso un programma prolog e restituisce in uscita zero, una o pi\xf9 soluzioni."),(0,o.kt)("p",null,(0,o.kt)("img",{src:r(5127).Z,width:"598",height:"448"})),(0,o.kt)("p",null,"In generale tutte le implementazioni di motori di risoluzione, per poter essere utilizzate nell'ambito della libreria,\ndovranno aderire all'interfaccia ",(0,o.kt)("inlineCode",{parentName:"p"},"Solver"),". "),(0,o.kt)("p",null,"Come risultato si ottiene l'estendibilt\xe0 della libreria dal punto di vista dei motori di risoluzione supportati."))}d.isMDXComponent=!0},5127:(e,t,r)=>{r.d(t,{Z:()=>i});const i=r.p+"assets/images/architecture-98bb0ea335eed9a1355fb3bdf1e977f1.png"}}]);